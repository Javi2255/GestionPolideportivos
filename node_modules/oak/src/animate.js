(function (o) {
    "use strict";

    var that = {};

    var caf, raf, lastTime = 0,
        prefixes = o.support.prefixes;
    
    if (window.requestAnimationFrame) {
        raf = window.requestAnimationFrame;
    } else {
        for(var i = 0; i < prefixes.length && !that.requestAnimationFrame; i += 1) {
            raf = window[prefixes[i] + "RequestAnimationFrame"];
            caf = window[prefixes[i] + "CancelAnimationFrame"] || window[prefixes[i] + "CancelRequestAnimationFrame"];
        }
    }

    if (caf) {
        that.cancelAnimationFrame = function () {
            caf.apply(window, arguments);
        };
    } else {
        that.cancelAnimationFrame = function(id) {
            clearTimeout(id);
        };
    }

    if (raf) {
        that.requestAnimationFrame = function () {
            raf.apply(window, arguments);
        };
    } else {
        that.requestAnimationFrame = function (callback, element) {
            var currTime = new Date().getTime();
            var timeToCall = Math.max(0, 16 - (currTime - lastTime));
            var id = window.setTimeout(function () {
                callback(currTime + timeToCall);
            }, timeToCall);
            lastTime = currTime + timeToCall;
            return id;
        };
    }
 
    o.core.extend(that);
}(oak));
